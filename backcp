#!/bin/bash
usage() { cat <<EOF
$*

Usage:
    backcp FILE         # cp --backup=t FILE FILE.bak
    backcp FILE DIR     # cp --backup=t FILE DIR/FILE
    backcp FILE1 FILE2  # cp --backup=t FILE1 FILE2
    backcp <(CMD) FILE2 # cp --backup=1 <(CMD) FILE2

Options:
    --help, -h, -?  show help
EOF
}
help_exit() {
	usage "copy FILE to FILE.bak or DIR/FILE."
	exit 0
}
error_exit() {
	usage $1 >&2
	exit 1
}
# parse command line
case $1 in
--help|-h|-\?|"") help_exit;;
esac
src=$1
dst=$2
if [ -p "$src" ] && ([ -d "$dst" ] || [ -z "$dst" ]); then
	error_exit "$src is pipe, please specify FILE2"
fi
base=${1##*/} # BASE.EXT
[ -d "$dst" ] && dst=$dst/$base

# print exist backup-files and do backup
if [ -n "$dst" ] ; then
	[ -f "$dst" ] && ls -lFt $dst*
	cp -ip --backup=t $src $dst
else
	[ -f "$src" ] && ls -lFt $src*
	cp -ip --backup=t $src{,.bak}
fi
