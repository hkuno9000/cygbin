#!/bin/bash
# diff to fuzzy backup file
DIFF=${DIFF:-diff -wup --color=auto} # diffopt:: -w:ignore-all-space, -u:unified-style, p:show-c-function
usage() { cat <<EOF
$*

Usage:
    [DIFF=diffcmd] backdiff [options] FILE [--diff-options] # diffcmd --diff-options BACKUP FILE

BACKUP:
    FILE~ FILE.~*~
    FILE.bak  FILE.bak~ FILE.bak.~*~
    FILE.orig FILE.orig~ FILE.orig.~*~
    FILE.save FILE.save~ FILE.save.~*~
    ~/orig/FILE ~/save/FILE ~/backup/FILE
    ./orig/FILE ./save/FILE ./bak/FILE ./fix/FILE ./tmp/FILE

options:
    --help, -h, -?  show help
    -c "cmd"        diff <(cmd) FILE

diffcmd:
    default: 'diff -wup --color=auto', now '$DIFF'
EOF
}
help_exit() {
	usage "diff SELECTED-BACKUP FILE."
	exit 0
}
error_exit() {
	usage $1 >&2
	exit 1
}

function pushback {
	local f
	for f in $@; do
		[ -f "$f" ] && back="$back $f" # append existing files to $back
	done
}
function pushbackt {
	local f
	for f in $@; do
		pushback $f{,~,.~*~} # fname fname~ fname.~*~
	done
}
# parse command line
case $1 in
--help|-h|-\?|"") help_exit;;
-c)
	shift; # skip -c
	cmd="$1"
	file="${cmd}.log"
	shift; # skip "cmd"
	[ -n "$1" ] && [ "${1:0:1}" != "-" ] && file="$1" && shift
	;;
*)
	[ -f "$1" ] || error_exit "file not found: $1"
	file="$1" && shift
	;;
esac
base=${file##*/} # BASE.EXT
noext=${file%.*} # DIR/BASE
dir=${file%/*}   # DIR
DIFF=$DIFF $@    # add diff-options

# search backup files
pushback $file{~,.~*~}		# fname~ fname.~*~
pushbackt $file.{bak,orig,save}	# fname.bak fname.orig fname.save
if [ ${noext:-$file} != $file ] ; then
	pushbackt $noext.{bak,orig,save} # dir/base.bak dir/base.orig dir/base.save
fi
if [ -n "$base" ] ; then
	pushbackt ~/{orig,save,backup}/$base
	if [ "$PWD" != "$HOME" ] ; then
		pushbackt ./{orig,save,bak,fix,tmp}/$base
	fi
	if [ -d "$dir" ] ; then
		pushbackt $dir/{orig,save,bak,fix,tmp}/$base
		pushbackt ~/{orig,save,backup}/${dir#/}/$base
	fi
fi
[ -n "$back" ] || error_exit "backup not found";

# show files and select, then do diff
#echo "@:[$@], cmd:[$cmd], file:[$file], base:[$base], noext:[$noext], dir:[$dir], back:[$back]"
[ -n "$cmd" ] || ls -ltFG $file
ls -ltFG $back | uniq
select sel in $(ls -1t $back | uniq); do
	if [ -n "$cmd" ]; then
		$DIFF $sel <($cmd)
	else
		$DIFF $sel $file
	fi
done
