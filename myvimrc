"=== encoding
set enc=utf-8
set fencs=ucs-bom,utf-8,sjis,cp932,euc-jp,iso-2022-jp
set fileformats=unix,dos,mac

" FROM <http://www.kawaz.jp/pukiwiki/?vim>
" if fenc is iso-2022-jp and buffer is ascii only then change fenc as enc
" if this failed, do :e ++enc=utf-8
""set fencs=ucs-bom,iso-2022-jp,euc-jp,sjis,cp932,utf-8
""if has('autocmd')
""  function! AU_ReCheck_FENC()
""    if &fileencoding =~# 'iso-2022-jp' && search("[^\x01-\x7e]", 'n') == 0
""       let &fileencoding=&encoding
""    endif
""  endfunction
""  autocmd BufReadPost * call AU_ReCheck_FENC()
""endif

"=== for sudo vim cursorkey
set nocompatible

"=== status line
set laststatus=2
set statusline=%<%F%h%m%r\ [%Y][%{&ff}][%{&fenc!=''?&fenc:&enc}:0x\%02.6B]%=%l,%c%V\ %P

"=== syntax
" check /usr/share/vim/vim74/filetype.vim
au BufNewFile,BufRead *.ssi setf perl
syntax on
filetype on
autocmd FileType c,cpp,perl,javascript,SH set cindent tabstop=4 shiftwidth=4
autocmd FileType MARKDOWN                 set shiftwidth=4 expandtab smarttab
let g:is_bash = 1

"=== cursor
" FROM <http://qiita.com/usamik26/items/f733add9ca910f6c5784>
" style swith I / BOX
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q" " Insert: I
let &t_SR.="\e[3 q" " Replace: _
let &t_EI.="\e[1 q" " Normal: []
let &t_te.="\e[0 q"

"=== IME
" FROM <https://chanko.hatenadiary.jp/entry/2016/10/28/162648>
" IME OFF when Insert/Replace/Normal
let &t_SI.="\e[<0t"
let &t_SR.="\e[<0t"
let &t_EI.="\e[<0t"

"=== mouse
set mouse=a
set ttymouse=sgr

"=== color
" default colorscheme are here: /usr/share/vim/vim*/colors/
" user installed      are here: ~/.vim/colors/
set background=dark
if exists('$TERM') && ($TERM == 'xterm-direct')
    set termguicolors
elseif exists('$COLORTERM') && ($COLORTERM == 'truecolor' || $COLORTERM == '24bit')
    set termguicolors
elseif exists('$TERM_PROGRAM') && ($TERM_PROGRAM == 'mintty') " MINGW/MSYS2(GFW)
    set termguicolors
elseif exists('$WSL_DISTRO_NAME')
    set termguicolors
elseif exists('$SSH_CLIENT') " sshクライアントから$COLORTERMを受け取るのが正統方法だが設定が複雑なので、sshクライアントはtruecolor端末と見做す.
    set termguicolors
endif
"colorscheme evening
"colorscheme elflord

"=== insert/normal mode
set cursorline
augroup InsertHook
    autocmd!
    autocmd InsertEnter * call Set_Insert_hi()
    autocmd InsertLeave * call Restore_orig_hi()
augroup END:
function! Set_Insert_hi()
    if &background == 'dark'
        hi clear StatusLine | hi StatusLine cterm=bold,reverse gui=bold,reverse ctermfg=cyan guifg=cyan
        hi clear CursorLine | hi CursorLine cterm=bold gui=bold ctermbg=darkcyan guibg=darkcyan
        hi Normal guibg=#333355
    else
        hi clear StatusLine | hi StatusLine cterm=bold gui=bold ctermbg=black guibg=black ctermfg=cyan guifg=cyan
        hi clear CursorLine | hi CursorLine cterm=bold gui=bold ctermbg=cyan guibg=cyan
        hi Normal guibg=#EEEEFF
    endif
endfunction
function! Restore_orig_hi()
    " 保存した設定を元に戻すのが本来処理だが、カラースキームを再設定することで手間を省く.
    execute 'colorscheme ' . get(g:, 'colors_name', 'default')
endfunction
"function! Save_orig_hi()
" 設定値は下記で簡単に取れるが、highlightへの引数に変形するのが困難である.
"   let g:orig_hi_statusline = execute('highlight StatusLine')
"   let g:orig_hi_cursorline = execute('highlight CursorLine')
"   let g:orig_hi_normal = execute('highlight Normal')
" 以下のように、設定値を個別に得て、highlightコマンドを組み上げるのが正統な処理である.
"   let l:guifg = synIDattr(hlID('StatusLine'), 'fg', 'gui')
"endfunction
"autocmd VimEnter,ColorScheme * call Save_orig_hi()

"=== search
" FROM <https://qiita.com/nrk_baby/items/154e3fa15c48a39e3375#%E3%82%B4%E3%83%BC%E3%83%AB>
" 小文字の検索でも大文字も見つかるようにする
set ignorecase
" ただし大文字も含めた検索の場合はその通りに検索する
set smartcase
" インクリメンタルサーチを行う
set incsearch
" 検索結果をハイライト表示
set hlsearch

"=== keybind
" FROM <https://qiita.com/nrk_baby/items/154e3fa15c48a39e3375#%E3%82%B4%E3%83%BC%E3%83%AB>
" 入力モード中に素早くjjと入力した場合はESCとみなす
inoremap jj <Esc>
" vを二回で行末まで選択
vnoremap v $h

" ファイルを全部閉じる.
inoremap qq <Esc><Cmd>qall<CR>
nnoremap qq <Cmd>qall<CR>

" 開いているファイルをvscodeで開く.
nnoremap <leader>v :call system('code '..expand('%'))<CR>

" 特定のエンコードで開き直す.
nnoremap <leader>8 :e ++enc=utf-8
nnoremap <leader>j :e ++enc=sjis
" BOMの有無を確認する.
nnoremap <leader>b :set bomb?
" TABインデント設定を確認する.
nnoremap <leader>t :set ts? sts? sw? et? sta?

"=== visible tab,space,eol
set list
set listchars=tab:»-,trail:-,extends:»,precedes:«,nbsp:%,eol:↲
" NonText:eol, SpecialKey:tab,trail
highlight NonText    ctermfg=DarkGreen guifg=DarkGreen
highlight SpecialKey ctermfg=DarkGreen guifg=DarkGreen

"=== OS dependant
if     has("mac")
elseif has("win64")
  command! Q call system('start https://qiita.com/hkuno/items/4557f3f8d6b27d2884f2')
elseif has("win32")	" win32/win64
  command! Q call system('start https://qiita.com/hkuno/items/4557f3f8d6b27d2884f2')
elseif has("win32unix")	" msys/cygwin
  command! Q call system('start https://qiita.com/hkuno/items/4557f3f8d6b27d2884f2')
elseif has("unix")	" msys/WSL/Linux
  command! Q call system('xdg-open https://qiita.com/hkuno/items/4557f3f8d6b27d2884f2')
endif
"=== local
if filereadable(expand($HOME.'/.vimrc_local'))
  source $HOME/.vimrc_local
endif
