# vim: set filetype=sh shiftwidth=2 expandtab smarttab cindent:
yesno() {
  local yn cmd msg="${1:-OK? [y/N]} "
  case $1 in
    -c)
      shift
      cmd="$@"
      msg="$* [y/N] "
      ;;
  -h|-?|--help)
    echo 'usage: yesno "prompt"'
    echo '       yesno -c command arg1 arg2 ...'
    return
    ;;
  esac
  read -r -p "$msg" yn
  case $yn in
    Y|y|yes)
      $cmd
      true
      ;;
    *)
      false
      ;;
esac
}

cdx()
{
  if [ -z "$1" ]; then
    cd
    return
  fi
  local dir
  for dir in $@ $1* ../$1* ../../$1* ~/$1* ~/GitHub/$1* ~/BitBucket/$1* ~/install/$1*; do
    if [ -d "$dir" ]; then
      pushd "$dir"
      return
    fi
  done
}

setlang()
{
  case $1 in
    sjis)
      export LANG=ja_JP.SJIS
      export LESSCHARSET=dos;;
    utf8)
      export LANG=ja_JP.UTF-8
      export LESSCHARSET=utf-8;;
    utf8n)
      export LANG=ja_JP.UTF-8@cjknarrow
      export LESSCHARSET=utf-8;;
    en)
      export LANG=en_US.UTF-8
      export LESSCHARSET=utf-8;;
    C)
      export LANG=C
      export LESSCHARSET=utf-8;;
    *)
      echo "usage: setlang [sjis|utf8|utf8n|en|C]";;
  esac
  locale
  printenv LESSCHARSET
}

setll()
{
  local ll=$(alias ll)			# get alias command of ll. i.e. "alias ll='ls -l --time-style=iso'"
  ll=$(echo $ll | perl -lpe "
      s/alias ll='(.+)\s*'/\1/;		# extract alias value. i.e. 'ls -l --time-style=iso'
      s/\s*--time-style=[\w-]+//g;	# strip '--time-style=*'
    ")
  ll=${ll:=ls -l};				# if null, then use "ls -l"
  case $1 in
    iso|long-iso|full-iso)
      alias ll="$ll --time-style=$1";;
    clear)
      alias ll="$ll";;
    *)
      echo "usage: setll [iso|long-iso|full-iso|clear]";;
  esac
  alias ll
}

histclean()
{
  # save current history to $HISTFILE.
  history -w
  if [ "$1" == "-e" ]; then
    # edit history
    ${EDITOR:-vi} $HISTFILE
    history -c && history -r $HISTFILE
  else
    # remove status check commands from history.
    local new=$(mktemp)
    command egrep -vw \
      -e '^(ls|ll|lt|la|l|h|[ef]?grep|ps|jobs|diff|less|man|help|histclean)' \
      -e '^(logs|logss|st|sts)' \
      -e '^git (status|show|help|grep|diff.*|log.*|[a-z]l|st|sts|crlf)' \
      $HISTFILE > $new
    history -c && history -r $new && history -w
    command rm $new
  fi
}
