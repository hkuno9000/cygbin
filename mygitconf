#!/bin/bash
# vim: set filetype=sh tabstop=4 softtabstop=2 shiftwidth=2 expandtab cindent:
ifz-git-conf-global()
{
  if [ -z "$(git config --global --get $1)" ] ; then
             git config --global "$@"
  fi
}
MYDIR=$(cd $(dirname $0); pwd)
# git user
ifz-git-conf-global user.name 'YOUR NAME'
ifz-git-conf-global user.email 'YOUR@mail.address.com'
# git core
ifz-git-conf-global core.editor "${EDITOR:-vim}"
git config --global core.quotepath false
# git commit template
ifz-git-conf-global commit.template ~/.commit_template
[ -f ~/.commit_template ] || ln -f $MYDIR/mycommit_template ~/.commit_template
# git無視パターンファイルを作成して、登録する
# 1. core.excludesfile の初期値は $XDG_CONFIG_HOME/git/ignore なので、その場所に作る方法と、
# 2. 任意の場所にファイルを作成し、そのパスを core.excludesfile に設定する方法がある.
ifz-git-conf-global core.excludesfile ~/.gitignore_global
[ -f ~/.gitignore_global ] || ln -f $MYDIR/myignore ~/.gitignore_global
# git push
git config --global push.default simple
# git pull
git config --global pull.ff only
# git credential
ifz-git-conf-global credential.helper cache
# git rebase
ifz-git-conf-global rebase.autosquash true
# pager
dir="/usr/share/doc/git/contrib/diff-highlight"
if [ -d $dir ] ; then
  (cd $dir ; make -q diff-highlight || sudo make && sudo install -v -t /usr/local/bin diff-highlight)
fi
if [ -n "$(which diff-highlight)" ] ; then
  pager="${PAGER:-less}"
  ifz-git-conf-global pager.log  "diff-highlight | $pager"
  ifz-git-conf-global pager.diff "diff-highlight | $pager"
  ifz-git-conf-global pager.show "diff-highlight | $pager"
fi
# tig
git config --global tig.tab-size 4
git config --global tig.mouse yes
[ -f ./.tigrc ] || ln -f $MYDIR/mytigrc ~/.tigrc
# git diff
git config --global diff.compactionHeuristic true
# git alias
git config --global alias.utf8 '!LANG=ja_JP.UTF-8 LESSCHARSET=utf-8 git'
git config --global alias.sjis '!LANG=ja_JP.SJIS  LESSCHARSET=dos   git'
git config --global alias.st 'status'
git config --global alias.sts 'status --short --branch'
git config --global alias.co 'checkout'
git config --global alias.ci 'commit'
git config --global alias.cia  'commit -v --amend'
git config --global alias.cian 'commit    --amend --no-edit'
git config --global alias.cif  'commit -v --fixup'
git config --global alias.cis  'commit -v --squash'
git config --global alias.uncommit 'reset --soft'
git config --global alias.unstage  'reset --mixed'
git config --global alias.rollback 'reset --hard'
git config --global alias.recommit '!git tag -f recommit_orig && git reset HEAD^ && git commit -pvc recommit_orig'
git config --global alias.pullr  'pull --rebase'
git config --global alias.pullri 'pull --rebase=interactive'
git config --global alias.pushf  'push --force-with-lease'
git config --global alias.br 'branch'
git config --global alias.bl 'branch -avv'
git config --global alias.tl 'tag -l -n'
git config --global alias.rl 'remote -v'
git config --global alias.al 'config --get-regexp alias.*'
git config --global alias.ul 'config --show-origin --get-regexp user.*'
git config --global alias.crlf 'config --show-origin --get-all core.autocrlf'
if [ -z "$(git config -h | grep show-origin)" ] ; then
	git config --global alias.ul 'config --get-regexp user.*'
	git config --global alias.crlf 'config --get-all core.autocrlf'
fi
git config --global alias.confg 'config --global'
git config --global alias.diffc 'diff --cached'
git config --global alias.difftoolc 'difftool --cached'
git config --global alias.diffs 'diff --stat'
git config --global alias.diffn 'diff --no-index'
git config --global alias.logs  'log --decorate --oneline -10'
git config --global alias.logss 'log --no-decorate --oneline -10'
git config --global alias.logv  'log --decorate --graph --branches --stat --format=fuller'
git config --global alias.logvr 'log --decorate --graph --branches --stat --format=fuller --relative-date'
git config --global alias.reflogv 'reflog --decorate --format=fuller'
git config --global alias.reflogvr 'reflog --decorate --format=fuller --relative-date'
git config --global alias.reflogr 'reflog --decorate --relative-date'
git config --global alias.ignore '!vim $(git config --get core.excludesfile)'
git config --global alias.top20 '!echo === Top new 20 === && ls -lt $(git ls-files) | head -20 && echo === Top big 20 === && ls -lS $(git ls-files) | head -20'
